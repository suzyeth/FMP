//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""d470052d-0bfe-4e6c-b5ee-cc9c173066e1"",
            ""actions"": [
                {
                    ""name"": ""Touch"",
                    ""type"": ""Button"",
                    ""id"": ""b869125e-3f58-4876-b751-39b9bc787b14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""7a10d512-13f9-41ff-9d3b-16164f85179c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""463f051b-2b69-4fb0-ac4d-513c0539771a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""683e3fc0-bbb2-4c83-aa29-0ea85208388b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""c2d39641-1f23-4cf7-b849-8c2afd762578"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""c6ef7cfe-6c6d-4331-a8e7-a9b396cc5cc8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Undo"",
                    ""type"": ""Button"",
                    ""id"": ""412942f2-ba72-4a99-b762-79dd059ab601"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TeleportationSkill4"",
                    ""type"": ""Button"",
                    ""id"": ""0c6b5f34-d5af-42f8-b722-54f94eefeb2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PullBoxSkill3"",
                    ""type"": ""Button"",
                    ""id"": ""51f1260b-a42a-4a59-bc60-29f0267c1ebe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IceBreakingSkill1"",
                    ""type"": ""Button"",
                    ""id"": ""ff9a1f5a-9cc1-489d-a250-35c073d2407d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThroughSpikesSkill2"",
                    ""type"": ""Button"",
                    ""id"": ""d1a4e0d9-e00b-4080-bfd0-290eeed6dbe7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c2daeccb-ef33-4e39-8c88-c5dafccbaaa1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c1b4c63-139c-4ab7-9ccc-6fa8bae8a871"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85131d1a-5883-4078-a377-fe8fd697b50c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b430ebe-2f82-4bad-92b4-a93100149970"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8850c50e-e93b-4449-ace2-5083d252472f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2c5ba16-580b-48d7-8371-d619076ef497"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8ba0460-cdbc-48cd-a280-82b9c39b3055"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Undo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5972f567-e160-41f5-aa7c-11515b19aa67"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportationSkill4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7790f00d-30d1-4b0c-a257-48a9f34db5e9"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PullBoxSkill3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10f1a2fa-88f8-4cab-bd6b-f47df406db8d"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IceBreakingSkill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""398be50d-d03a-441e-b71f-e310f2f6f165"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": ""Press,Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThroughSpikesSkill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Touch = m_Gameplay.FindAction("Touch", throwIfNotFound: true);
        m_Gameplay_Up = m_Gameplay.FindAction("Up", throwIfNotFound: true);
        m_Gameplay_Down = m_Gameplay.FindAction("Down", throwIfNotFound: true);
        m_Gameplay_Left = m_Gameplay.FindAction("Left", throwIfNotFound: true);
        m_Gameplay_Right = m_Gameplay.FindAction("Right", throwIfNotFound: true);
        m_Gameplay_TouchPosition = m_Gameplay.FindAction("TouchPosition", throwIfNotFound: true);
        m_Gameplay_Undo = m_Gameplay.FindAction("Undo", throwIfNotFound: true);
        m_Gameplay_TeleportationSkill4 = m_Gameplay.FindAction("TeleportationSkill4", throwIfNotFound: true);
        m_Gameplay_PullBoxSkill3 = m_Gameplay.FindAction("PullBoxSkill3", throwIfNotFound: true);
        m_Gameplay_IceBreakingSkill1 = m_Gameplay.FindAction("IceBreakingSkill1", throwIfNotFound: true);
        m_Gameplay_ThroughSpikesSkill2 = m_Gameplay.FindAction("ThroughSpikesSkill2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Touch;
    private readonly InputAction m_Gameplay_Up;
    private readonly InputAction m_Gameplay_Down;
    private readonly InputAction m_Gameplay_Left;
    private readonly InputAction m_Gameplay_Right;
    private readonly InputAction m_Gameplay_TouchPosition;
    private readonly InputAction m_Gameplay_Undo;
    private readonly InputAction m_Gameplay_TeleportationSkill4;
    private readonly InputAction m_Gameplay_PullBoxSkill3;
    private readonly InputAction m_Gameplay_IceBreakingSkill1;
    private readonly InputAction m_Gameplay_ThroughSpikesSkill2;
    public struct GameplayActions
    {
        private @PlayerInput m_Wrapper;
        public GameplayActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Touch => m_Wrapper.m_Gameplay_Touch;
        public InputAction @Up => m_Wrapper.m_Gameplay_Up;
        public InputAction @Down => m_Wrapper.m_Gameplay_Down;
        public InputAction @Left => m_Wrapper.m_Gameplay_Left;
        public InputAction @Right => m_Wrapper.m_Gameplay_Right;
        public InputAction @TouchPosition => m_Wrapper.m_Gameplay_TouchPosition;
        public InputAction @Undo => m_Wrapper.m_Gameplay_Undo;
        public InputAction @TeleportationSkill4 => m_Wrapper.m_Gameplay_TeleportationSkill4;
        public InputAction @PullBoxSkill3 => m_Wrapper.m_Gameplay_PullBoxSkill3;
        public InputAction @IceBreakingSkill1 => m_Wrapper.m_Gameplay_IceBreakingSkill1;
        public InputAction @ThroughSpikesSkill2 => m_Wrapper.m_Gameplay_ThroughSpikesSkill2;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Touch.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouch;
                @Touch.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouch;
                @Touch.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouch;
                @Up.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDown;
                @Left.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRight;
                @TouchPosition.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTouchPosition;
                @Undo.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUndo;
                @Undo.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUndo;
                @Undo.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUndo;
                @TeleportationSkill4.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTeleportationSkill4;
                @TeleportationSkill4.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTeleportationSkill4;
                @TeleportationSkill4.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTeleportationSkill4;
                @PullBoxSkill3.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPullBoxSkill3;
                @PullBoxSkill3.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPullBoxSkill3;
                @PullBoxSkill3.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPullBoxSkill3;
                @IceBreakingSkill1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnIceBreakingSkill1;
                @IceBreakingSkill1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnIceBreakingSkill1;
                @IceBreakingSkill1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnIceBreakingSkill1;
                @ThroughSpikesSkill2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThroughSpikesSkill2;
                @ThroughSpikesSkill2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThroughSpikesSkill2;
                @ThroughSpikesSkill2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnThroughSpikesSkill2;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Touch.started += instance.OnTouch;
                @Touch.performed += instance.OnTouch;
                @Touch.canceled += instance.OnTouch;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @TouchPosition.started += instance.OnTouchPosition;
                @TouchPosition.performed += instance.OnTouchPosition;
                @TouchPosition.canceled += instance.OnTouchPosition;
                @Undo.started += instance.OnUndo;
                @Undo.performed += instance.OnUndo;
                @Undo.canceled += instance.OnUndo;
                @TeleportationSkill4.started += instance.OnTeleportationSkill4;
                @TeleportationSkill4.performed += instance.OnTeleportationSkill4;
                @TeleportationSkill4.canceled += instance.OnTeleportationSkill4;
                @PullBoxSkill3.started += instance.OnPullBoxSkill3;
                @PullBoxSkill3.performed += instance.OnPullBoxSkill3;
                @PullBoxSkill3.canceled += instance.OnPullBoxSkill3;
                @IceBreakingSkill1.started += instance.OnIceBreakingSkill1;
                @IceBreakingSkill1.performed += instance.OnIceBreakingSkill1;
                @IceBreakingSkill1.canceled += instance.OnIceBreakingSkill1;
                @ThroughSpikesSkill2.started += instance.OnThroughSpikesSkill2;
                @ThroughSpikesSkill2.performed += instance.OnThroughSpikesSkill2;
                @ThroughSpikesSkill2.canceled += instance.OnThroughSpikesSkill2;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnTouch(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnTouchPosition(InputAction.CallbackContext context);
        void OnUndo(InputAction.CallbackContext context);
        void OnTeleportationSkill4(InputAction.CallbackContext context);
        void OnPullBoxSkill3(InputAction.CallbackContext context);
        void OnIceBreakingSkill1(InputAction.CallbackContext context);
        void OnThroughSpikesSkill2(InputAction.CallbackContext context);
    }
}
